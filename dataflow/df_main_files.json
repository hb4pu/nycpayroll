{
	"name": "df_main_files",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_adls_src_empmaster",
						"type": "DatasetReference"
					},
					"name": "srcemployee"
				},
				{
					"dataset": {
						"referenceName": "ds_adls_src_agencymaster",
						"type": "DatasetReference"
					},
					"name": "srcagency"
				},
				{
					"dataset": {
						"referenceName": "ds_adls_src_titlemaster",
						"type": "DatasetReference"
					},
					"name": "srctitle"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_synpse_trg_nyc_payroll_emp_md",
						"type": "DatasetReference"
					},
					"name": "snkemployee"
				},
				{
					"dataset": {
						"referenceName": "ds_synpse_trg_nyc_payroll_agency_md",
						"type": "DatasetReference"
					},
					"name": "snkagency"
				},
				{
					"dataset": {
						"referenceName": "ds_synpse_trg_nyc_payroll_title_md",
						"type": "DatasetReference"
					},
					"name": "snktitle"
				}
			],
			"transformations": [],
			"scriptLines": [
				"source(output(",
				"          EmployeeID as string,",
				"          LastName as string,",
				"          FirstName as string",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> srcemployee",
				"source(output(",
				"          AgencyID as string,",
				"          AgencyName as string",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> srcagency",
				"source(output(",
				"          TitleCode as string,",
				"          TitleDescription as string",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> srctitle",
				"srcemployee sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          EmployeeID as string,",
				"          LastName as string,",
				"          FirstName as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          EmployeeID,",
				"          LastName,",
				"          FirstName",
				"     )) ~> snkemployee",
				"srcagency sink(allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     input(",
				"          AgencyID as string,",
				"          AgencyName as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          AgencyID,",
				"          AgencyName",
				"     )) ~> snkagency",
				"srctitle sink(allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     input(",
				"          TitleCode as string,",
				"          TitleDescription as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          TitleCode,",
				"          TitleDescription",
				"     )) ~> snktitle"
			]
		}
	}
}